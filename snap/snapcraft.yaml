name: gimp
version: '2.10.6'
summary: GNU Image Manipulation Program
description: |
  Whether you are a graphic designer, photographer, illustrator, or scientist,
  GIMP provides you with sophisticated tools to get your job done. You can
  further enhance your productivity with GIMP thanks to many customization
  options and 3rd party plugins.
icon: gimp.png

grade: stable
confinement: strict
base: core18

# passthrough:
#   layout:
#     /usr:
#       bind: $SNAP/usr

# slots:
#   dbus-gimp:
#     interface: dbus
#     bus: session
#     name: org.gimp.GIMP.UI
#   dbus-darktable:
#     interface: dbus
#     bus: session
#     name: org.darktable.service

apps:
  gimp:
    command: desktop-launch $SNAP/usr/bin/gimp
    desktop: usr/share/applications/gimp.desktop
    environment:
      BABL_PATH: $SNAP/usr/lib/babl-0.1
      GEGL_PATH: $SNAP/usr/lib/gegl-0.4
      GIMP2_DATADIR: $SNAP/usr/share/gimp/2.0
      GIMP2_LOCALEDIR: $SNAP/usr/share/locale
      GIMP2_PLUGINDIR: $SNAP/usr/lib/gimp/2.0
      GIMP2_SYSCONFDIR: $SNAP/etc/gimp/2.0
      PYTHONPATH: $SNAP/usr/lib/python2.7:$SNAP/usr/lib/python2.7/site-packages:$PYTHONPATH
    plugs:
    - cups-control
    - desktop
    - desktop-legacy
    - gsettings
    - home
    - network
    - opengl
    - removable-media
    - unity7
    - wayland
    - x11

parts:
  fix-pkgconfig-files:
    plugin: nil
    override-build: |
      cat <<EOF > $SNAPCRAFT_PART_INSTALL/fix-pkgconfig-files.sh
      for pcfile in \$SNAPCRAFT_PART_INSTALL/usr/lib/\$SNAPCRAFT_ARCH_TRIPLET/pkgconfig/*.pc \$SNAPCRAFT_PART_INSTALL/usr/lib/pkgconfig/*.pc \$SNAPCRAFT_PART_INSTALL/usr/local/lib/\$SNAPCRAFT_ARCH_TRIPLET/pkgconfig/*.pc \$SNAPCRAFT_PART_INSTALL/usr/local/lib/pkgconfig/*.pc; do
        sed -i -E "s~^((include|lib)dir=)/usr(/local)?~\1\\\${prefix}~g" \$pcfile || true
        sed -i -E "s~^((exec_)?prefix=)(/usr(/local)?)~\1/\3~" \$pcfile || true
      done
      EOF
      chmod +x $SNAPCRAFT_PART_INSTALL/fix-pkgconfig-files.sh
    prime:
    - -*

  fix-symlinks:
    # REF: https://unix.stackexchange.com/questions/100918/convert-absolute-symlink-to-relative-symlink-with-simple-linux-command
    plugin: nil
    override-build: |
      cat <<EOF > $SNAPCRAFT_PART_INSTALL/fix-symlinks.sh
      cd \$SNAPCRAFT_PART_INSTALL
      find . -lname '/*' |
      while read l ; do
        echo ln -sf \$(echo \$(echo \$l | sed 's|/[^/]*|/..|g')\$(readlink \$l) | sed 's/.....//') \$l
      done |
      sh
      EOF
      chmod +x $SNAPCRAFT_PART_INSTALL/fix-symlinks.sh
    prime:
    - -*

  desktop-gtk3:
    source: https://github.com/ubuntu/snapcraft-desktop-helpers.git
    source-subdir: gtk
    plugin: make
    make-parameters: ["FLAVOR=gtk3"]
    build-packages:
    - libgtk-3-dev
    stage-packages:
    - libxkbcommon0  # XKB_CONFIG_ROOT
    - ttf-ubuntu-font-family
    - dmz-cursor-theme
    - light-themes
    - adwaita-icon-theme
    - gnome-themes-standard
    - shared-mime-info
    - libgtk-3-0
    - libgdk-pixbuf2.0-0
    - libglib2.0-bin
    - libgtk-3-bin
    - unity-gtk3-module
    - libappindicator3-1
    - locales-all
    - xdg-user-dirs
    - ibus-gtk3
    - libibus-1.0-5
    after: [desktop-patch]
    override-pull: |
      snapcraftctl pull
      patch -Np1 < $SNAPCRAFT_STAGE/launcher-specific.patch

  desktop-patch:
    source: patches
    plugin: dump
    prime: [-*]

  alsa-lib:
    plugin: autotools
    source: https://mirrorservice.org/sites/ftp.alsa-project.org/pub/lib/alsa-lib-1.1.6.tar.bz2
    configflags:
    - --prefix=/usr
    - --sysconfdir=/etc
    - --libexec=/usr/lib
    - --libdir=/usr/lib
    - --localstatedir=/var
    - --with-configdir=/snap/$SNAPCRAFT_PROJECT_NAME/current/usr/share/alsa
    - --with-plugindir=/snap/$SNAPCRAFT_PROJECT_NAME/current/usr/lib/alsa-lib
    - --disable-alisp
    - --disable-aload
    - --disable-python
    - --disable-rawmidi
    - --disable-static
    - --disable-topology
    - --disable-ucm
    - --enable-symbolic-functions
    override-build: |
      snapcraftctl build
      for pcfile in $SNAPCRAFT_PART_INSTALL/usr/lib/pkgconfig/*.pc; do
        sed -i -E "s~^((include|lib)dir=)/usr(/local)?~\1\${prefix}~g" $pcfile || true
        sed -i -E "s~^((exec_)?prefix=)(/usr(/local)?)~\1/\3~" $pcfile || true
      done
    organize:
      snap/*/current/usr/lib/*: usr/lib/
      snap/*/current/usr/share/*: usr/share/
    stage:
    - usr/include
    - usr/lib
    - usr/share/alsa
    prime:
    - usr/lib/*.so
    - usr/lib/*.so.*
    - usr/share/alsa

  alsa-plugins:
    after: [alsa-lib]
    plugin: autotools
    source: https://mirrorservice.org/sites/ftp.alsa-project.org/pub/plugins/alsa-plugins-1.1.6.tar.bz2
    configflags:
    - --prefix=/usr
    - --sysconfdir=/etc
    - --libexec=/usr/lib
    - --libdir=/usr/lib
    - --localstatedir=/var
    - --disable-arcamav
    - --disable-avcodec
    - --disable-jack
    - --disable-mix
    - --disable-oss
    - --disable-usbstream
    - --with-plugindir=/snap/$SNAPCRAFT_PROJECT_NAME/current/usr/lib/alsa-lib
    - --disable-static
    - LDFLAGS=-L$SNAPCRAFT_STAGE/usr/lib
    organize:
      snap/*/current/usr/lib/*: usr/lib/
    stage:
    - lib
    - usr/lib
    - usr/share/alsa
    prime:
    - lib
    - usr/lib
    - usr/share/alsa
    build-packages:
    - libpulse-dev
    stage-packages:
    - libpulse0

  alsa:
    after: [alsa-plugins, alsa-lib]
    plugin: nil
    source: https://github.com/diddledan/snapcraft-alsa.git
    override-pull: |
      cat > alsa.conf <<EOF
      pcm.!default {
        type pulse
        fallback "sysdefault"
        hint {
          show on
          description "Default ALSA Output (currently PulseAudio Sound Server)"
        }
      }
      ctl.!default {
        type pulse
        fallback "sysdefault"
      }
      EOF
      cat > alsa-launch <<EOF
      #!/bin/bash
      if [ "\$SNAP_ARCH" == "amd64" ]; then
        ARCH="x86_64-linux-gnu"
      elif [ "\$SNAP_ARCH" == "armhf" ]; then
        ARCH="arm-linux-gnueabihf"
      elif [ "\$SNAP_ARCH" == "arm64" ]; then
        ARCH="aarch64-linux-gnu"
      else
        ARCH="\$SNAP_ARCH-linux-gnu"
      fi
      export LD_LIBRARY_PATH="\$SNAP/usr/lib/alsa-lib:\$SNAP/usr/lib/\$ARCH/pulseaudio:\$LD_LIBRARY_PATH"
      export ALSA_CONFIG_PATH="\$SNAP/etc/alsa.conf"
      # Make PulseAudio socket available inside the snap-specific $XDG_RUNTIME_DIR
      if [ -n "$XDG_RUNTIME_DIR" ]; then
          pulsenative="pulse/native"
          pulseaudio_sockpath="$XDG_RUNTIME_DIR/../$pulsenative"
          if [ -S "$pulseaudio_sockpath" ]; then
              export PULSE_SERVER="unix:${pulseaudio_sockpath}"
          fi
      fi
      exec "\$@"
      EOF
    override-build: |
      snapcraftctl build
      install -m644 -D -t $SNAPCRAFT_PART_INSTALL/etc alsa.conf
      install -m755 -D -t $SNAPCRAFT_PART_INSTALL/bin alsa-launch
    
  # https://download.gimp.org/pub/babl
  babl:
    after:
    - fix-pkgconfig-files
    plugin: autotools
    source: https://download.gimp.org/pub/babl/0.1/babl-0.1.56.tar.bz2
    source-checksum: sha256/8ad26ca717ec3c74e261f454dd6bb316333a39fd1f87db4ac44706a860dc4d28
    configflags:
    - --prefix=/usr
    - --disable-static
    override-build: |
      snapcraftctl build
      $SNAPCRAFT_STAGE/fix-pkgconfig-files.sh
    build-packages:
    - gobject-introspection
    - libgirepository1.0-dev
    - librsvg2-dev
    stage-packages:
    - libgirepository-1.0-1
    - librsvg2-2
    build-attributes: [no-system-libraries]

  # https://download.gimp.org/pub/gegl
  gegl:
    after:
    - babl
    - fix-pkgconfig-files
    source: https://download.gimp.org/pub/gegl/0.4/gegl-0.4.2.tar.bz2
    source-checksum: sha256/6a358bc19d20b8ac1daf645cc8b53cdc2ea6f9c98a6036179a57045a26a07f8d
    plugin: autotools
    configflags:
    - --prefix=/usr
    - --disable-rpath
    - --disable-static
    override-build: |
      export XDG_DATA_DIRS=$SNAPCRAFT_STAGE/usr/share:/usr/local/share:/usr/share
      export GIO_MODULE_DIR=$SNAPCRAFT_STAGE/usr/lib/gio/modules
      ./configure --prefix=/usr --disable-docs --disable-rpath --disable-static
      make -j$SNAPCRAFT_PARALLEL_BUILD_COUNT
      make DESTDIR=$SNAPCRAFT_PART_INSTALL install
      $SNAPCRAFT_STAGE/fix-pkgconfig-files.sh
    build-packages:
    - gobject-introspection
    - graphviz-dev
    - libexiv2-dev
    - libfftw3-dev
    - libgexiv2-dev
    - libgirepository1.0-dev
    - libglib2.0-dev
    - libjpeg8-dev
    - libjson-glib-dev
    - liblcms2-dev
    - liblensfun-dev
    - libopenexr-dev
    - libpng-dev
    - libraw-dev
    - librsvg2-dev
    - libspiro-dev
    - libsuitesparse-dev
    - libtiff5-dev
    - libwebp-dev
    - python-gobject-2-dev
    stage-packages:
    - graphviz
    - libamd2
    - libblas3
    - libbtf1
    - libcamd2
    - libccolamd2
    - libcholmod3
    - libcolamd2
    - libcxsparse3
    - libexiv2-14
    - libgexiv2-2
    - libgirepository-1.0-1
    - libglib2.0-0
    - libgraphblas1
    - libjpeg8
    - libjson-glib-1.0-0
    - libklu1
    - liblapack3
    - liblcms2-2
    - libldl2
    - liblensfun1
    - libopenexr22
    - libpng16-16
    - libraw16
    - librbio2
    - librsvg2-2
    - libspiro0
    - libspqr2
    - libsuitesparseconfig5
    - libtiff5
    - libumfpack5
    - libwebp6
    - python-gobject-2
    build-attributes: [no-system-libraries]

  # https://github.com/mypaint/libmypaint/releases
  libmypaint:
    after:
    - fix-pkgconfig-files
    plugin: autotools
    source: https://github.com/mypaint/libmypaint/releases/download/v1.3.0/libmypaint-1.3.0.tar.xz
    source-checksum: sha256/6a07d9d57fea60f68d218a953ce91b168975a003db24de6ac01ad69dcc94a671
    build-packages:
    - gobject-introspection
    - intltool
    - libgirepository1.0-dev
    - libglib2.0-dev
    - libjson-c-dev
    - libjson-glib-dev
    stage-packages:
    - libgirepository-1.0-1
    - libglib2.0-0
    - libjson-glib-1.0-0
    configflags:
    - --prefix=/usr
    - --disable-static
    override-build: |
      export XDG_DATA_DIRS=$SNAPCRAFT_STAGE/usr/share:/usr/local/share:/usr/share
      ./configure --prefix=/usr --disable-static
      make -j$SNAPCRAFT_PARALLEL_BUILD_COUNT
      make DESTDIR=$SNAPCRAFT_PART_INSTALL install
      $SNAPCRAFT_STAGE/fix-pkgconfig-files.sh
    build-attributes: [no-system-libraries]

  # https://github.com/Jehan/mypaint-brushes/releases
  mypaint-brushes:
    after:
    - libmypaint
    source: https://github.com/Jehan/mypaint-brushes/archive/v1.3.0.tar.gz
    plugin: autotools
    configflags:
    - --prefix=/usr
    build-attributes: [no-system-libraries]

  webkitgtk:
    after: [alsa, desktop-gtk3]
    plugin: cmake
    source: https://webkitgtk.org/releases/webkitgtk-2.22.2.tar.xz
    source-checksum: sha256/345487d4d1896e711683f951d1e09387d3b90d7cf59295c0e634af7f515e99ba
    configflags:
    - -DCMAKE_INSTALL_PREFIX=/snap/$SNAPCRAFT_PROJECT_NAME/current/usr
    - -DCMAKE_INSTALL_LIBEXECDIR=lib
    - -DCMAKE_BUILD_TYPE=Release
    - -DENABLE_MINIBROWSER=ON
    - -DPORT=GTK
    build-packages:
    - bison
    - flex
    - gawk
    - geoclue-2.0
    - gobject-introspection
    - gperf
    - gtk-doc-tools
    - libcairo2-dev
    - libegl1-mesa-dev
    - libenchant-dev
    - libfile-copy-recursive-perl
    - libfontconfig1-dev
    - libfreetype6-dev
    - libgcrypt20-dev
    - libgeoclue-2-dev
    - libgirepository1.0-dev
    - libgl1-mesa-dev
    - libgles2-mesa-dev
    - libglib2.0-dev
    - libgstreamer-plugins-base1.0-dev
    - libgstreamer1.0-dev
    - libgtk-3-dev
    - libgtk2.0-dev
    - libgudev-1.0-dev
    - libharfbuzz-dev
    - libhyphen-dev
    - libicu-dev
    - libjpeg-dev
    - libnotify-dev
    - libpango1.0-dev
    - libpng-dev
    - libsecret-1-dev
    - libsoup2.4-dev
    - libsqlite3-dev
    - libtasn1-6-dev
    - libupower-glib-dev
    - libwebp-dev
    - libwoff-dev
    - libxml2-dev
    - libxslt1-dev
    - libxt-dev
    - mesa-common-dev
    - ruby-dev
    - zlib1g-dev
    stage-packages:
    - libatk1.0-0
    - libcairo2
    - libegl1
    - libenchant1c2a
    - libfontconfig1
    - libfreetype6
    - libgcrypt20
    - libgdk-pixbuf2.0-0
    - libgeoclue-2-0
    - libglib2.0-0
    - libglu1-mesa
    - libgstreamer-gl1.0-0
    - libgstreamer-plugins-base1.0-0
    - libgstreamer1.0-0
    - libharfbuzz-icu0
    - libharfbuzz0b
    - libhyphen0
    - libicu60
    - libjpeg8
    - libnotify4
    - libpango-1.0-0
    - libpng16-16
    - libsecret-1-0
    - libsoup2.4-1
    - libsqlite3-0
    - libtasn1-6
    - libwayland-client0
    - libwayland-egl1-mesa
    - libwebp6
    - libwebpdemux2
    - libwoff1
    - libx11-6
    - libxcomposite1
    - libxml2
    - libxslt1.1
    - zlib1g
    override-stage: |
      rsync -av $SNAPCRAFT_PART_INSTALL/snap/gimp/current/ $SNAPCRAFT_PART_INSTALL/
      snapcraftctl stage
    stage:
    - -usr/lib/**/libasound*
    prime:
    - -snap
    # disable-parallel: true

  # https://www.gimp.org/downloads
  gimp:
    after:
    - desktop-gtk3
    - babl
    - gegl
    - libmypaint
    - mypaint-brushes
    - webkitgtk
    plugin: autotools
    source: https://download.gimp.org/pub/gimp/v2.10/gimp-$SNAPCRAFT_PROJECT_VERSION.tar.bz2
    source-checksum: sha256/4ec8071f828e918384cf7bc7d1219210467c84655123f802bc55a8bf2415101f
    configflags:
    - --prefix=/usr
    - --sysconfdir=/etc
    - --with-bug-report-url=https://github.com/snapcrafters/gimp/issues/
    - --enable-binreloc
    override-build: |
      export BABL_PATH="$SNAPCRAFT_STAGE/usr/lib/babl-0.1"
      export GEGL_PATH="$SNAPCRAFT_STAGE/usr/lib/gegl-0.4"
      export XDG_DATA_DIRS=$SNAPCRAFT_STAGE/usr/share:/usr/local/share:/usr/share
      export PYTHON=/usr/bin/python2.7
      sed -i 's|^Exec=.*|Exec=gimp %U|;s|^Icon=.*|Icon=${SNAP}/usr/share/icons/hicolor/256x256/apps/gimp.png|' \
        desktop/gimp.desktop.in.in
      if [ -x ./autogen.sh ]; then env NOCONFIGURE=1 ./autogen.sh; fi
      ./configure --prefix=/usr --sysconfdir=/etc --with-bug-report-url=https://github.com/snapcrafters/gimp/issues/ --enable-binreloc
      make -j$SNAPCRAFT_PARALLEL_BUILD_COUNT
      make DESTDIR=$SNAPCRAFT_PART_INSTALL install
      sed -i -E "s|^(.*python=).*|\1/snap/$SNAPCRAFT_PROJECT_NAME/current/usr/bin/python|" $SNAPCRAFT_PART_INSTALL/usr/lib/gimp/2.0/interpreters/pygimp.interp || true
    build-packages:
    - glib-networking
    - gobject-introspection
    - intltool
    - iso-codes
    - libaa1-dev
    - libart-2.0-dev
    - libbz2-dev
    - libcurl4-gnutls-dev
    - libexif-dev
    - libfftw3-dev
    - libgirepository1.0-dev
    - libglib2.0-dev
    - libgpm-dev
    - libgs-dev
    - libgudev-1.0-dev
    - libheif-dev
    - libice-dev
    - libjpeg8-dev
    - libmng-dev
    - libpoppler-glib-dev
    - libslang2-dev
    - libsm-dev
    - libtiff5-dev
    - libwebp-dev
    - libx11-dev
    - libxcursor-dev
    - libxmu-dev
    - libxpm-dev
    - libxt-dev
    - zlib1g-dev
    - python-dev
    - python-cairo-dev
    - python-gtk2-dev
    - xsltproc
    stage-packages:
    - glib-networking
    - iso-codes
    - libaa1
    - libart-2.0-2
    - libbz2-1.0
    - libcurl3-gnutls
    - libexif12
    - libfftw3-double3
    - libfftw3-long3
    - libfftw3-quad3
    - libfftw3-single3
    - libgirepository-1.0-1
    - libglib2.0-0
    - libgpm2
    - libgs9
    - libgudev-1.0-0
    - libheif1
    - libice6
    - libjpeg8
    - libmng2
    - libpoppler-glib8
    - libslang2
    - libsm6
    - libtiff5
    - libwebp6
    - libwebpdemux2
    - libx11-6
    - libxcursor1
    - libxmu6
    - libxpm4
    - libxt6
    - python-cairo
    - python-dev
    - python-gtk2
    - xdg-utils
    - zlib1g
    build-attributes: [no-system-libraries]
